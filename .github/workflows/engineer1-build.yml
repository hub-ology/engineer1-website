# This workflow will install Python dependencies and generate the static site using poetry and mkdocs

name: Engineer1 build and package 

on:
  # workflow_dispatch
  push:
    branches: [ main, staging ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install poetry
        poetry install

    - name: Generate site
      run: |
        poetry run mkdocs build

    - name: Save Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.sha }}-site
        path: site
        retention-days: 1

  # it seems wasteful to need to perform the deploy operation in this manner but the environment name in
  # github actions is in beta and is only available at the job level thus the two distinct jobs below. The alternative would
  # be to use a naming convention for secrets and access with a pattern like 'secrets.{0}.AWS_ACCESS_KEY_ID' where {0} would be 
  # replaced by the branch name or an environment variable based on the branch 
  deploy_stage:
    if: endsWith(github.ref, '/staging')
    runs-on: ubuntu-latest
    needs: build
    environment: Staging
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - name: Download site Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ github.sha }}-site
        path: site

    - name: Deploy
      uses: reggionick/s3-deploy@v3
      with:
        folder: site
        bucket: ${{ secrets.S3_BUCKET }}
        bucket-region: ${{ secrets.S3_BUCKET_REGION }}
        dist-id: ${{ secrets.CF_DIST_ID }}
        invalidation: "/*"
        delete-removed: true
        no-cache: true
        private: true

  deploy_production:
    if: endsWith(github.ref, '/main')
    runs-on: ubuntu-latest
    needs: build
    environment: Production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - name: Download site Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ github.sha }}-site
        path: site

    - name: Deploy
      uses: reggionick/s3-deploy@v3
      with:
        folder: site
        bucket: ${{ secrets.S3_BUCKET }}
        bucket-region: ${{ secrets.S3_BUCKET_REGION }}
        dist-id: ${{ secrets.CF_DIST_ID }}
        invalidation: "/*"
        delete-removed: true
        no-cache: true
        private: true
